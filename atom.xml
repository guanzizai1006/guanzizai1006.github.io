<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>【Bruce】|备战马拉松</title>
  
  <subtitle>厚德载物</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://liwenxue.top/"/>
  <updated>2019-12-04T16:50:15.732Z</updated>
  <id>https://liwenxue.top/</id>
  
  <author>
    <name>Bruce Lee</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2019年12月第 01 期分享</title>
    <link href="https://liwenxue.top/%E6%89%87%E8%B4%9D1204/"/>
    <id>https://liwenxue.top/扇贝1204/</id>
    <published>2019-12-04T14:30:01.000Z</published>
    <updated>2019-12-04T16:50:15.732Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>关键词：2019年冬第一期分享；总结；阅读；生活</p></blockquote><ul><li><strong>摘要</strong>：“栽一棵树最好的时间点，一是十年前，二是现在”。很高兴能在12月的第一周，全体成员能按时打卡，并能积极开始分享各自的见解，为本群所有成员的共同进步奠定了基础，维系了本群可持续发展的基本要求；</li><li>本周目前有“22-小吴”同志、“12-快乐的小电工”同志、“32-Alma Chu”同志的分享，都体现出了各自的思考深度，展示了各自的良好学习习惯，值得我认真学习；</li><li>最后，本次分享，开了个好头，希望大家能够继续保持良好习惯，共同进步。</li></ul><blockquote><p>一、 优秀分享原文（共3份）</p></blockquote><pre><code>第一位：22-小吴，周三分享</code></pre><p>分享最近读的一本书吧，《贫穷的本质》，阿比吉特·巴纳吉（Abhijit Banerjee）、埃丝特·迪弗洛（Esther Duflo）和迈克尔·克雷默（Michael Kremer）。获得诺贝尔奖，和大多通俗读物不同，这本书有点像学术著作的写作手法，1.穷人缺乏正确的信息来源，而往往选择相信错误的事情，2.穷人肩负着生活中的多种逆境，更难作出正确的决定，3.服务于穷人的市场正在消失或穷人在其中处于不利地位，4.穷人往往因短视和成见放弃长远规划，5.穷人的自我控制更难实现，并生活在更大的压力中。虽然文中有很多穷人遇到的问题，比如接种疫苗，清洁的水资源这些我们可能靠着现代社会的福利能够有效的避免，或者不用担心多生几个儿子防养老这样的思维（因为现代社会养老保险，社会福利已经做到了），但是这些思维抽象到现代社会又何尝不是呢，现代年轻人喜欢打游戏（游戏中，很快能够得到正向激励反馈），不会想着去投资自己，做长期规划，希望买高端手机（有些人认为买房太遥远，还不如买小东西犒劳自己，可乐经济学，口红效应），等等，这些思维其实都是一些穷人思维，最后，分享一句本杰明·富兰克林的金句：勤奋、毅力和节约创造财富。</p><pre><code>第二位： 32--Alma Chu，周三分享</code></pre><p>我读书比较慢，最近在看《当我跑步时，我谈着什么》，有段话很喜欢，想分享给大家</p><pre><code>第三位：12--快乐的小电工，周三分享</code></pre><p>大家好，我也分享最近读的一本书，冯唐的《成事》。冯唐是协和医学博士，麦肯锡合伙人，“成事”的意思不是成功，而是做成事情（get things done）。在这本书中他以曾国藩的《嘉言钞》为蓝本，以成事为主旨，结合自己在麦肯锡的管理经验，从现代管理角度解读，如何管理自己，管理事，管理团队。<br>虽然书名取得很“成功学”，但他一开始就强调，成功是可遇而不可求的。但“成事”——做成自己的事情，却是通过努力可以达到的。这本书有点像读书笔记，每页上面是曾国藩的《嘉言钞》，下面是冯唐的评语。<br>核心思想可以概括为三个：1.大处着眼，小处着手。这句话也是《嘉言钞》里最重要，最有名的一句话。这与毛主席的“战略上轻视敌人，战术上重视敌人有异曲同工之妙”。大处着眼，能把握重点和全局，小处着手则是说任何一个计划最终都需要落到实处。2.屡败屡战，徐图自强。说的是一个人要有坚韧的意志。曾国藩确实是个很好的典型，一辈子打败仗比打胜仗要多，但从不放弃，坚持到最后他就赢了。徐图自强用冯唐的话来说就是“不着急，不害怕，不要脸”。不着急才能长时间做一件事情，不害怕才会敢于尝试，敢于犯错，而做到内心无比混蛋，比什么都重要。3.养生之道，身心兼顾。这说的是管理自己的身体，既要做到坚持锻炼，每周坚持120分钟以上的有氧运动，让自己活得比对手多，还要做到内心平和。这点在目前这个浮躁的年代尤其难做到。比如说大家会习惯于碎片时间玩玩手机，冯唐则说，要充分利用这些碎片时间，停下手中的手机，去发呆，聊天，读书，去揣摩不因时间流逝而改变的真理。</p><blockquote><p>二、 刘一手的读后感</p></blockquote><ul><li><p>第一点：</p><p>  “贫穷思维”： 要致富，先修路，这句话在农村传的也很广；而且，也有“交通强国，铁路先行”，说明了路，对经济的发展很重要，“海上丝绸之路”亦是一条“路”；修好了路，才有通往小康生活的基础和条件，包括经济，都会发展的越来越好。而数百年前的马克思、恩格斯讲过，经济基础决定上层建筑。有解析说，经济基础是第一性的，是上层建筑的根源；上层建筑是第二性的，是经济基础的派生物。而我们的古话，对“经济”也有很直观的描述，“贫贱夫妻百事哀”、“穷居闹市无人问，富在深山有远亲”。经济的重要性，是不可忽视的。</p><p>  看了“小吴”同志的分享，有写到了贫穷的原因、表现、改善措施等等，都是值得长期思考的问题。罗马，不是一天建成的，很多事情的改变，都是一个累积的过程，需要自己用清醒的头脑去思考，去行动。首先，关于“贫穷”，其实头天晚上我就跟朋友聊天，说自己有点心疼，为什么？  这么冷的天，路边十字路口有大妈在推着三轮车，卖着10块钱3斤的橘子，却生意清冷，偶尔也拿出一个小安卓手机看看时间；这么冷的天，学生晚自习后走的差不多了，还有一个四五十岁的大妈扛着棒子在风中站着，棒子上，是那还没卖完的几串冰糖葫芦，想必冰糖葫芦也被冻得冰凉冰凉的了吧；这么冷的天，还有花白头发的老奶奶在垃圾堆翻找东西（我在深圳宝安区也曾在晚上11点后还有老奶奶去翻垃圾箱）。  </p><p>  大晚上的只想这些现象会让自己难受，我只是尽量让自己对周围，能起到更好的表率。也就是，对我自己而言，礼貌待人，日常生活中能对他人报以微笑，对身边力所能及的事情，能帮就不逃避，踏踏实实守好本分。“修身重于求学”，多数人能够做个好人，社会自然就发展的更好。</p><p>  虽然跟分享者的主题不太搭边，但在写的时候，我又一次告诉了自己，脚踏实地，要善良。</p></li></ul><ul><li><p>第二点：</p><p>  嗯，《当我跑步时，我在想什么》。看到分享者的内容，我就想起了“小志”。</p><p>  这本书是他毕业前送我的，还有另外一两本专业的跑步教材。</p><p>  他是我高中校友，大学校友。我们都怀念着一中对面的“土豆片”（上周末在光谷旁吃了一碗，没有一中对面那家好吃，也没有豆腐块）。</p><p>  他是赤脚绕操场跑步都比我快的人。</p><p>  他和我都差点活不到20岁。</p><p>  他，因为跑步改善了身体条件；我，因为跑步，开始了自己的“马拉松”。</p><p>  书的作者是村上春树，一个有了老婆敢直接当全职作家的一个日本男人。他在跑着当年那个叫马拉松的人跑的路线时，处于那么严酷的自然条件，他一个人，在想什么？我在我第一次10公里的时候，我在想什么？我在想，“怎么一圈这么长”，“怎么还只是3公里”，“只有最后2圈了要坚持”。一开始跑不动3公里，到后来， 跟魏c和韩h和土木的学弟和考研的恩施妹子，有去城里拉练，有去公园拉练，有去操场排酸跑，都是很开心的一些经历。那时候，跑步路上，我不习惯想七想八，我很认真的抬腿摆臂，控制呼吸，把握步频，我愿意一个人跑，那是我觉得好自由的时候。当我在跑步时，我不想什么。给跑步以专注，给我以自由。我不需要很专业，愿身体能健康，愿自己能开心，这就是我跑步的初衷。</p><p>  嗯，关于跑步的，我好多要写的，等恩施妹子考完了再写，嘿嘿。也不知道考完后带我去按摩是不是真的。</p></li><li><p>第三点：</p><p>  嗯，毛的语录我觉得好多都好有道理，哈哈哈。“自己动手，丰衣足食”。口谈误国，实干兴邦，该睡了。</p></li></ul><hr><p><img src="http://ww1.sinaimg.cn/large/de1830begy1g9l6as5bqqj21hc0u07ds.jpg" alt="191204.jpg"></p><hr><h1 id="刘一手，写于2019-12-5。"><a href="#刘一手，写于2019-12-5。" class="headerlink" title="刘一手，写于2019.12.5。"></a>刘一手，写于2019.12.5。</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;关键词：2019年冬第一期分享；总结；阅读；生活&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;摘要&lt;/strong&gt;：“栽一棵树最好的时间点，一是十年前，二是现在”。很高兴能在12月的第一周，全体成员能按时打卡，并能积极开
      
    
    </summary>
    
      <category term="-阅读分享" scheme="https://liwenxue.top/categories/%E9%98%85%E8%AF%BB%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="-生活" scheme="https://liwenxue.top/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>疲劳驾驶项目成果图文展示</title>
    <link href="https://liwenxue.top/%E7%96%B2%E5%8A%B3%E9%A9%BE%E9%A9%B6%E9%A1%B9%E7%9B%AE%E6%88%90%E6%9E%9C%E5%9B%BE%E6%96%87%E5%B1%95%E7%A4%BA/"/>
    <id>https://liwenxue.top/疲劳驾驶项目成果图文展示/</id>
    <published>2019-03-30T15:36:28.000Z</published>
    <updated>2019-12-04T17:32:31.792Z</updated>
    
    <content type="html"><![CDATA[<h1 id="疲劳驾驶项目成果图片展示"><a href="#疲劳驾驶项目成果图片展示" class="headerlink" title="疲劳驾驶项目成果图片展示"></a>疲劳驾驶项目成果图片展示</h1><h2 id="这里将之前做的东西上传到这里，以便于自己回顾总结，并提醒自己，要对基本方法进行改进，以达到更好的效果"><a href="#这里将之前做的东西上传到这里，以便于自己回顾总结，并提醒自己，要对基本方法进行改进，以达到更好的效果" class="headerlink" title="这里将之前做的东西上传到这里，以便于自己回顾总结，并提醒自己，要对基本方法进行改进，以达到更好的效果"></a>这里将之前做的东西上传到这里，以便于自己回顾总结，并提醒自己，要对基本方法进行改进，以达到更好的效果</h2><h3 id="web端图片展示如下："><a href="#web端图片展示如下：" class="headerlink" title="web端图片展示如下："></a>web端图片展示如下：</h3><p><img src="/疲劳驾驶项目成果图文展示/1.jpg" alt="图一"></p><p><img src="/疲劳驾驶项目成果图文展示/2.jpg" alt="图二"></p><p><img src="/疲劳驾驶项目成果图文展示/3.jpg" alt="图三"></p><p><img src="/疲劳驾驶项目成果图文展示/4.jpg" alt="图四"></p><h3 id="暂时先补充这些，web端即将上线，届时更新到服务器上，完成在线检测功能。"><a href="#暂时先补充这些，web端即将上线，届时更新到服务器上，完成在线检测功能。" class="headerlink" title="暂时先补充这些，web端即将上线，届时更新到服务器上，完成在线检测功能。"></a>暂时先补充这些，web端即将上线，届时更新到服务器上，完成在线检测功能。</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;疲劳驾驶项目成果图片展示&quot;&gt;&lt;a href=&quot;#疲劳驾驶项目成果图片展示&quot; class=&quot;headerlink&quot; title=&quot;疲劳驾驶项目成果图片展示&quot;&gt;&lt;/a&gt;疲劳驾驶项目成果图片展示&lt;/h1&gt;&lt;h2 id=&quot;这里将之前做的东西上传到这里，以便于自己回顾总结，
      
    
    </summary>
    
      <category term="疲劳驾驶项目成果图文展示" scheme="https://liwenxue.top/categories/%E7%96%B2%E5%8A%B3%E9%A9%BE%E9%A9%B6%E9%A1%B9%E7%9B%AE%E6%88%90%E6%9E%9C%E5%9B%BE%E6%96%87%E5%B1%95%E7%A4%BA/"/>
    
    
      <category term="图文展示" scheme="https://liwenxue.top/tags/%E5%9B%BE%E6%96%87%E5%B1%95%E7%A4%BA/"/>
    
  </entry>
  
  <entry>
    <title>Git 和 GitHub 的使用方法汇总</title>
    <link href="https://liwenxue.top/Git%E5%92%8CGitHub%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%E6%B1%87%E6%80%BB/"/>
    <id>https://liwenxue.top/Git和GitHub的使用方法汇总/</id>
    <published>2018-06-06T16:38:36.000Z</published>
    <updated>2018-10-13T11:24:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>categories: Git<br>tags: [Git, Github]<br><a href="https://www.cnblogs.com/fnng/archive/2011/08/25/2153807.html" target="_blank" rel="noopener">参考链接如下</a></p><h1 id="我们需要使用git在本地创建一个相同的项目。"><a href="#我们需要使用git在本地创建一个相同的项目。" class="headerlink" title="我们需要使用git在本地创建一个相同的项目。"></a>我们需要使用git在本地创建一个相同的项目。</h1><pre><code>&lt;pre&gt;$ makdir ~/hello-world    //创建一个项目hello-world$ cd ~/hello-world    //打开这个项目$ git init    //初始化 $ touch README$ git add README   //更新README文件$ git commit -m &apos;first commit&apos;//提交更新，并注释信息“first commit” $ git remote add origin git@github.com:defnngj/hello-world.git   //连接远程github项目  $ git push -u origin master   //将本地项目更新到github项目上去&lt;/pre&gt;源文档 &lt;https://www.cnblogs.com/fnng/archive/2011/08/25/2153807.html&gt; </code></pre><h1 id="Git的诞生"><a href="#Git的诞生" class="headerlink" title="Git的诞生"></a>Git的诞生</h1><pre><code>Linus Torvalds在1991年创建了开源系统Linux，在2002年以前，世界各地的志愿者把源代码文件通过diff的方式发给Linus，然后由Linus本人通过手工方式合并代码！然后，Linux系统已经发展了十年了，代码库之大让Linus很难继续通过手工方式管理了。源文档 &lt;http://www.testclass.net/git/git-github-start/&gt; </code></pre><h1 id="更改readme文件！！！"><a href="#更改readme文件！！！" class="headerlink" title="更改readme文件！！！"></a>更改readme文件！！！</h1><pre><code>第一步尝试失败：  &lt;pre&gt;Bruce Lee@Bruce MINGW64 ~/bruce_demo_pack (master)$ vim READMEBruce  Lee@Bruce MINGW64 ~/bruce_demo_pack (master)$ git push -u origin masterEverything up-to-dateBranch &apos;master&apos; set up to track remote branch &apos;master&apos; from &apos;origin&apos;.&lt;/pre&gt;单独更改了其中的README文件后，直接执行“git push -u origin master”语句，其并不能同步到GitHub网站上去。</code></pre><blockquote><p>Note:   在第一次远程链接某项目时，这一句，必不可少！<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add origin git@github.com:guanzizai1006/bruce_demo_pack.git</span><br></pre></td></tr></table></figure></p></blockquote><p>  第二次尝试成功：<br>        <pre><br>        Bruce  Lee@Bruce MINGW64 ~/bruce_demo_pack (master)<br>        $ git commit -m “用git commit -m 提交更新”<br>        [master bffe44a] “用git commit -m 提交更新<br>         1 file changed, 11 insertions(+)<br>        </pre></p><p>  使用此命令，  </p><pre><code>&lt;pre&gt;$ git commit -m &quot;用git commit -m 提交更新&quot;  //双引号内是添加的评论内容,成功提交更新，下一步是要push上去！$ git push -u origin master Bruce  Lee@Bruce MINGW64 ~/bruce_demo_pack (master)$ git push -u origin masterCounting objects: 3, done.Delta compression using up to 4 threads.Compressing objects: 100% (2/2), done.Writing objects: 100% (3/3), 660 bytes | 660.00 KiB/s, done.Total 3 (delta 0), reused 0 (delta 0)To github.com:guanzizai1006/bruce_demo_pack.git   13cf1ed..bffe44a  master -&gt; masterBranch &apos;master&apos; set up to track remote branch &apos;master&apos; from &apos;origin&apos;.&lt;/pre&gt;</code></pre><h1 id="当本地项目中，新添加了一个-py-文件后，要上传到云端。"><a href="#当本地项目中，新添加了一个-py-文件后，要上传到云端。" class="headerlink" title="当本地项目中，新添加了一个 py 文件后，要上传到云端。"></a>当本地项目中，新添加了一个 py 文件后，要上传到云端。</h1><pre>$ git add one.py     //更新README文件$ git commit -m 'add the file named one.py'   //提交更新，并注释信息“first commit，用以说明本次更新的是啥” 源文档 <https: 25="" 2011="" www.cnblogs.com="" fnng="" archive="" 08="" 2153807.html=""> 【当然，这时候可以考虑，要不要远程连接github项目。 $ git remote add origin git@github.com:guanzizai1006/bruce_demo_pack.git】$ git push -u origin master//将本地项目更新到github项目上去</https:></pre><h1 id="克隆到本地。"><a href="#克隆到本地。" class="headerlink" title="克隆到本地。"></a>克隆到本地。</h1><p>（前期准备阶段）<br>首先，下载安装Git。</p><p>其次，通过Git生成本地公钥，并且将公钥添加到GitHub中。</p><p>最后，设置仓库人员的用户名和邮箱地址。</p><p>用  git clone   命令，克隆到目标路径。<br>（ssh 方式）</p><p><img src="http://pf6sbcbe5.bkt.clouddn.com/1.png" alt="克隆到本地"></p><p>或者  （http 方式）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  git clone https://github.com/defnngj/project-name</span><br></pre></td></tr></table></figure><blockquote><p>“git add” 命令对当前目录下的文件添加跟踪。这个命令后面 加一个 点 . 则意味着路径下的所有文件<br>“git commit” 命令将添加文件提交到本地仓库。<br>“git push” 将本地项目提交到远程仓库GitHub。<br>除第一次下载项目需要通过 “git clone” 将项目克隆到本地外,后续再使用 “git pull” 命令时会直接将更新拉取到本地</p></blockquote><pre>$ git pull origin master</pre>源文档 <http: www.testclass.net="" git="" git-github-used=""> # 命令行，windows进入别的盘符<pre>Bruce  Lee@Bruce MINGW64 ~$ cd /d</pre>Git的入门学习和使用。<https: 51694888="" blog.csdn.net="" tonyshengtan="" article="" details="">————————Linux下安装git 并下载码云仓库——————————————<pre>bruce@bruce-virtual-machine:~$ sudo apt-get install git[sudo] bruce 的密码： 正在读取软件包列表... 完成正在分析软件包的依赖关系树       正在读取状态信息... 完成       git 已经是最新版 (1:2.7.4-0ubuntu1.4)。升级了 0 个软件包，新安装了 0 个软件包，要卸载 0 个软件包，有 83 个软件包未被升级。</pre><ul><li><p>新建本地文件夹</p><pre>bruce@bruce-virtual-machine:~/桌面$ mkdir face_fatigue_detection</pre></li><li><p>克隆到本地</p><pre>bruce@bruce-virtual-machine:~/桌面/face_fatigue_detection$ git clone https://gitee.com/thc1234/face_fatigue_detection.git正克隆到 'face_fatigue_detection'...Username for 'https://gitee.com': guanzizai1006Password for 'https://Bruce@gitee.com': </pre></li><li><p>克隆完成啦</p><pre>bruce@bruce-virtual-machine:~/桌面/face_fatigue_detection$ git clone https://gitee.com/thc1234/face_fatigue_detection.git正克隆到 'face_fatigue_detection'...Username for 'https://gitee.com': guanzizai1006Password for 'https://guanzizai1006@gitee.com': remote: Enumerating objects: 405, done.remote: Counting objects: 100% (405/405), done.remote: Compressing objects: 100% (398/398), done.remote: Total 405 (delta 196), reused 0 (delta 0)接收对象中: 100% (405/405), 113.33 MiB | 1.23 MiB/s, 完成.处理 delta 中: 100% (196/196), 完成.</pre></li></ul><p>———————— Git配置 gitee码云————————————————————</p><p>由本地文件夹更新到云端的话，则只要命令行 ./push.sh 则可以完成了。</p><p>由云端更新到本地，只需要在本地目录下，执行  git pull 就OK了。</p><p>————————————————————————————————————</p><h2 id="查看当前路径的“完整路径”"><a href="#查看当前路径的“完整路径”" class="headerlink" title="查看当前路径的“完整路径”"></a>查看当前路径的“完整路径”</h2><p><img src="http://pf6sbcbe5.bkt.clouddn.com/2.png" alt="查看当前路径"></p><h2 id="新建本地文件夹后，克隆云端内容到本地目录"><a href="#新建本地文件夹后，克隆云端内容到本地目录" class="headerlink" title="新建本地文件夹后，克隆云端内容到本地目录"></a>新建本地文件夹后，克隆云端内容到本地目录</h2><p><img src="http://pf6sbcbe5.bkt.clouddn.com/3.png" alt="查看当前路径"></p><h2 id="运行sh文件，"><a href="#运行sh文件，" class="headerlink" title="运行sh文件，"></a>运行sh文件，</h2><p><img src="http://pf6sbcbe5.bkt.clouddn.com/4.png" alt="查看当前路径"></p><h2 id="sh-文件内容如下："><a href="#sh-文件内容如下：" class="headerlink" title="sh 文件内容如下："></a>sh 文件内容如下：</h2><pre>#!/bin/bashgit add ./*git commit -m "shell"git push</pre><p>截图如下<br><img src="http://pf6sbcbe5.bkt.clouddn.com/5.png" alt="查看当前路径"></p></https:></http:>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;categories: Git&lt;br&gt;tags: [Git, Github]&lt;br&gt;&lt;a href=&quot;https://www.cnblogs.com/fnng/archive/2011/08/25/2153807.html&quot; target=&quot;_blank&quot; rel=&quot;noo
      
    
    </summary>
    
      <category term="Git" scheme="https://liwenxue.top/categories/Git/"/>
    
    
      <category term="Git" scheme="https://liwenxue.top/tags/Git/"/>
    
      <category term="Github" scheme="https://liwenxue.top/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu16.04安装opencv2.4.13.6及配置环境</title>
    <link href="https://liwenxue.top/ubuntu16.04%E5%AE%89%E8%A3%85opencv2.4.13.6byBruce/"/>
    <id>https://liwenxue.top/ubuntu16.04安装opencv2.4.13.6byBruce/</id>
    <published>2018-04-01T12:00:01.000Z</published>
    <updated>2018-10-13T11:25:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>categories: ubuntu<br>tags: [ubuntu，opencv，安装]</p><h1 id="准备阶段"><a href="#准备阶段" class="headerlink" title="准备阶段"></a>准备阶段</h1><p>官网下载源码包，存到Linux下的“下载”，并解压。<br>bruce@bruce-virtual-machine:~/下载$ unzip opencv-2.4.13.6.zip</p><h1 id="第一步-安装编译工具。"><a href="#第一步-安装编译工具。" class="headerlink" title="(第一步)安装编译工具。"></a>(第一步)安装编译工具。</h1><p>bruce@bruce-virtual-machine:~$ sudo apt-get install build-essential<br>则会显示以下内容<br>正在读取软件包列表… 完成<br>正在分析软件包的依赖关系树<br>正在读取状态信息… 完成<br>build-essential 已经是最新版 (12.1ubuntu2)。<br>升级了 0 个软件包，新安装了 0 个软件包，要卸载 0 个软件包，有 198 个软件包未被升级。</p><h1 id="第二步-安装依赖包，主要参考了如下2个文档，都包含了必备的包。"><a href="#第二步-安装依赖包，主要参考了如下2个文档，都包含了必备的包。" class="headerlink" title="(第二步)安装依赖包，主要参考了如下2个文档，都包含了必备的包。"></a>(第二步)安装依赖包，主要参考了如下2个文档，都包含了必备的包。</h1><h2 id="https-blog-csdn-net-maxujian3893-article-details-64125988（较少安装包）"><a href="#https-blog-csdn-net-maxujian3893-article-details-64125988（较少安装包）" class="headerlink" title="https://blog.csdn.net/maxujian3893/article/details/64125988（较少安装包）"></a><a href="https://blog.csdn.net/maxujian3893/article/details/64125988（较少安装包）" target="_blank" rel="noopener">https://blog.csdn.net/maxujian3893/article/details/64125988（较少安装包）</a></h2><p>下面依赖关系主要是为了能够支持读写图片以及视频sudo apt-get install  libgtk2.0-dev libavcodec-dev libavformat-dev  libtiff4-dev（独有，提示已经被废弃，bruce并未安装。在使用pyth Ubuntu下叫做python-dev，CentOS下叫做python-devel，标记一下。）  libswscale-dev libjasper-dev<br>安装cmake，请输入命令 sudo apt-get install cmake<br>安装pkg-config。请输入命令： sudo apt-get install pkg-config  它是一个提供从源代码中编译软件时查询已安装的库时使用的统一接口的计算机软件。Ps.下图是查询Linux是否安装了某个包的方法</p><h2 id="https-blog-csdn-net-u011557212-article-details-54706966-utm-source-itdadao-amp-utm-medium-referral-（较多安装包）"><a href="#https-blog-csdn-net-u011557212-article-details-54706966-utm-source-itdadao-amp-utm-medium-referral-（较多安装包）" class="headerlink" title="https://blog.csdn.net/u011557212/article/details/54706966?utm_source=itdadao&amp;utm_medium=referral （较多安装包）"></a><a href="https://blog.csdn.net/u011557212/article/details/54706966?utm_source=itdadao&amp;utm_medium=referral" target="_blank" rel="noopener">https://blog.csdn.net/u011557212/article/details/54706966?utm_source=itdadao&amp;utm_medium=referral</a> （较多安装包）</h2><p>安装依赖包<br>sudo apt-get install cmake git libgtk2.0-dev（失败，难道16.04要换成3.0而不是2.0？） pkg-config libavcodec-dev libavformat-dev libswscale-dev<br>安装可选包<br>sudo apt-get install python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev</p><h1 id="源码-编译工具安装-依赖包的安装-三者全部搞定之后，接下来就是要编译啦！"><a href="#源码-编译工具安装-依赖包的安装-三者全部搞定之后，接下来就是要编译啦！" class="headerlink" title="源码+编译工具安装+依赖包的安装 三者全部搞定之后，接下来就是要编译啦！"></a>源码+编译工具安装+依赖包的安装 三者全部搞定之后，接下来就是要编译啦！</h1><ul><li>a.首先进入当前解压的源码包opencv所在目录opencv2.4.13.6  。使用的是cd命令或者是鼠标直接点击文件夹。</li><li>b.创建一个新的文件夹。输入指令： mkdir release</li><li>c.进入该release文件夹。输入指令：cd release</li><li>d.编译。输入命令：（最后在local接着的是两个点，不要忘了，最后直接复制粘贴进命令行）会比较耗时，比如会花费20分钟来编译，会有进度显示哒。<br>cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local ..</li><li>e.开启线程(按照自己的配置,处理器核数*2)。输入命令： make -j4</li><li>f.sudo make install （这一步也很快）</li></ul><h1 id="opencv大致安装完毕，但还没结束哦。接下来就是要配置环境啦！不然还是没法用opencv的哦！"><a href="#opencv大致安装完毕，但还没结束哦。接下来就是要配置环境啦！不然还是没法用opencv的哦！" class="headerlink" title="opencv大致安装完毕，但还没结束哦。接下来就是要配置环境啦！不然还是没法用opencv的哦！"></a>opencv大致安装完毕，但还没结束哦。接下来就是要配置环境啦！不然还是没法用opencv的哦！</h1><ul><li>a.在文件/etc/ld.so.conf中添加 /usr/local/lib (这里就是上文中您的安装目录下的)</li><li>b.当我们打开、/etc/ld.so.conf文件时，发现它的属性为只读，则终端上输入以下命令： sudo chmod 666 /etc/ld.so.conf 改变文件属性为允许所有用户对该文件进行读写操作然后另起一行输入/usr/local/lib了。</li><li>c.完成动态库的共享。请输入 sudo ldconfig –v<h1 id="接下来，配置opencv的头文件位置！"><a href="#接下来，配置opencv的头文件位置！" class="headerlink" title="接下来，配置opencv的头文件位置！"></a>接下来，配置opencv的头文件位置！</h1></li><li>a.输入命令： sudo gedit /etc/bash.bashrc   进入编辑页面。</li><li>b.在编辑命令输入以下内容：<br>PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig  并保存下来。</li><li>c.终端输入命令：<br>export PKG_CONFIG_PATH</li><li>d.使配置生效。终端输入命令:<br>sudo source /etc/bash.bashrc  的</li><li>e.由于source为root命令，需要root权限。<br>输入命令：su bruce（bruce为我本人的用户名，请换成您自己的）然后按提示进行。</li><li>f.再次使配置生效。终端输入命令：<br>  source /etc/bash.bashrc</li><li>g.退出。终端输入命令：quit()或者直接键盘按住 Ctrl+D 这两个按键。</li><li>h.更新database。终端输入命令：  sudo updatedb   </li></ul><h1 id="选择一个demo进行测试。"><a href="#选择一个demo进行测试。" class="headerlink" title="选择一个demo进行测试。"></a>选择一个demo进行测试。</h1><p>完工啦！！！哈哈，最后就可以来测试我们是否搞定这个opencv的配置啦</p><ul><li>a.在解压的opencv目录下找到 samples/c/文件夹。在该文件夹下输入终端指令：   ./build_all.sh    (这一步将会花费大概1分钟左右时间编译)</li><li>b.编译完成后，选一个运行，比如 find_obj 程序。<br>该文件夹下终端输入：  ./ find_obj    嘻嘻，一两秒内有看到图片了吧</li></ul><h1 id="python与opencv的接口配置。"><a href="#python与opencv的接口配置。" class="headerlink" title="python与opencv的接口配置。"></a>python与opencv的接口配置。</h1><p>ubuntu16.04自带python2.7和python3.5。在安装完Opencv后，我们安装Python-opencv，<br>请在终端输入命令 ： sudo apt-get install python-opencv<br>也可以安装python-numpy ： sudo apt-get install python-numpy<br>终端输入： cd ~ 进入根目录。<br>再输入python  回车键后，显示python的版本信息，<br>最后输入import cv  ,如果没有弹出任何信息，说明接口配置成功。</p><ul><li><p>参考资料：<br>【1】    <a href="https://blog.csdn.net/maxujian3893/article/details/64125988" target="_blank" rel="noopener">https://blog.csdn.net/maxujian3893/article/details/64125988</a><br>【2】    <a href="https://blog.csdn.net/u011557212/article/details/54706966?utm_source=itdadao&amp;utm_medium=referral" target="_blank" rel="noopener">https://blog.csdn.net/u011557212/article/details/54706966?utm_source=itdadao&amp;utm_medium=referral</a></p></li><li><p>p.s. 相关问题。<br>打开 vi 可以，不过应该是乱码。直接运行吧<br>比如说 你写了一个 c程序 helloworld.c<br>你用命令gcc -o helloworld.o helloworld.c<br>就会生成一个可执行的文件 helloworld.o<br>用命令 ./helloworld.o就可以执行了<br>（注意 点斜杠 是运行，有一点的）</p></li></ul><p>– </p><h2 id="嘿嘿，偷懒了，部分步骤图我还没有添加上来，等过几天闲下来了再加上来！！"><a href="#嘿嘿，偷懒了，部分步骤图我还没有添加上来，等过几天闲下来了再加上来！！" class="headerlink" title="嘿嘿，偷懒了，部分步骤图我还没有添加上来，等过几天闲下来了再加上来！！"></a>嘿嘿，偷懒了，部分步骤图我还没有添加上来，等过几天闲下来了再加上来！！</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;categories: ubuntu&lt;br&gt;tags: [ubuntu，opencv，安装]&lt;/p&gt;
&lt;h1 id=&quot;准备阶段&quot;&gt;&lt;a href=&quot;#准备阶段&quot; class=&quot;headerlink&quot; title=&quot;准备阶段&quot;&gt;&lt;/a&gt;准备阶段&lt;/h1&gt;&lt;p&gt;官网下载源码包，
      
    
    </summary>
    
      <category term="ubuntu" scheme="https://liwenxue.top/categories/ubuntu/"/>
    
    
      <category term="ubuntu，opencv，安装" scheme="https://liwenxue.top/tags/ubuntu%EF%BC%8Copencv%EF%BC%8C%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>face2ai社区成立啦！</title>
    <link href="https://liwenxue.top/face2%E7%A4%BE%E5%8C%BA%E6%88%90%E7%AB%8B%E5%95%A6/"/>
    <id>https://liwenxue.top/face2社区成立啦/</id>
    <published>2018-03-21T12:00:01.000Z</published>
    <updated>2018-10-13T11:24:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>categories: 人工智能平台<br>tags: [社区平台建设, 人工智能]</p><blockquote><p>欢迎各位！共同成长进步！</p></blockquote><h1 id="人工智能基础"><a href="#人工智能基础" class="headerlink" title="人工智能基础"></a>人工智能基础</h1><h1 id="links：https-www-face2ai-com"><a href="#links：https-www-face2ai-com" class="headerlink" title="links：https://www.face2ai.com/"></a>links：<a href="https://www.face2ai.com/" target="_blank" rel="noopener">https://www.face2ai.com/</a></h1><h1 id="欢迎来访！"><a href="#欢迎来访！" class="headerlink" title="欢迎来访！"></a>欢迎来访！</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;categories: 人工智能平台&lt;br&gt;tags: [社区平台建设, 人工智能]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;欢迎各位！共同成长进步！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;人工智能基础&quot;&gt;&lt;a href=&quot;#人工智能基础&quot; class=&quot;he
      
    
    </summary>
    
      <category term="人工智能平台" scheme="https://liwenxue.top/categories/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%B9%B3%E5%8F%B0/"/>
    
    
      <category term="社区平台建设" scheme="https://liwenxue.top/tags/%E7%A4%BE%E5%8C%BA%E5%B9%B3%E5%8F%B0%E5%BB%BA%E8%AE%BE/"/>
    
      <category term="人工智能" scheme="https://liwenxue.top/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>分析戴诗琪同学的《基于深度学习的疲劳驾驶检测算法》</title>
    <link href="https://liwenxue.top/0_%E6%88%B4%E8%AF%97%E7%90%AA_%E5%9F%BA%E4%BA%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E7%96%B2%E5%8A%B3%E9%A9%BE%E9%A9%B6%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95/"/>
    <id>https://liwenxue.top/0_戴诗琪_基于深度学习的疲劳驾驶检测算法/</id>
    <published>2016-11-04T23:00:01.000Z</published>
    <updated>2019-12-04T17:25:43.355Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>关键词：HOG算子；特征点模型；深度学习；CNN；疲劳检测算法<br>Question：查看作者的相关思路；查看作者是否有相关的数据支撑</p></blockquote><ul><li><strong>摘要</strong>：针对现有疲劳驾驶检测算法，实用性差或者准确率低的问题，本文提出了一种基于深度学习的疲劳驾驶检测算法。</li><li>首先，使用HOG（Histogram of Oriented Gradient）特征算子检测人脸的存在；其次，利用特征点模型实现人脸的对齐，同时实现眼睛、嘴巴的分割。</li><li>最后，通过深度卷积神经网络提取驾驶员的眼部疲劳特征，并融合驾驶员嘴部的疲劳特征进行疲劳预警。</li><li>大量的实验表明，该方法在疲劳驾驶检测的准确率、实时性等方面都取得明显的性能提升。</li></ul><ol><li>本文说，使用深度网络直接从图像中学习学习视觉特征表示，相较于手工设计的特征，对光照、姿势等条件变化，具有更好的鲁棒性。以上的疲劳驾驶检测算法都取得了一定的效果与进展，但仍然存在很大的局限性：基于行为特征的检测算法不需要驾驶人直接接触检测装置，并且在汽车现有装置的基础上对设备需求较低，实用性很强，易于推广，但会受到驾驶人个人习惯、路面条件和车辆型号的限制，所以效果不是很好。</li><li>但是，本文所说的，利用深度学习方法提取眼睛部位的视觉特征，建立视觉模型，以提升视觉特征的辨别能力，然后采用PERCLOS算法结合打哈欠的频率，判断驾驶员是否疲劳，减少单一特征的误检率。实验结果表明，本文提出的基于深度学习的疲劳驾驶检测方法是有效的</li></ol><hr><h1 id="基于深度学习的疲劳驾驶检测"><a href="#基于深度学习的疲劳驾驶检测" class="headerlink" title="基于深度学习的疲劳驾驶检测"></a>基于深度学习的疲劳驾驶检测</h1><p>本文设计的算法分为4步：</p><ul><li>首先利用HOG特征模型检测初摄像头实时获取的画面中的驾驶员的人脸图像，</li><li>然后根据面部标识算法，定位出人眼和嘴部区域</li><li>接着将定位出的眼睛区域图像输入深度卷积神经网络提取眼睛的视觉特征并分别判断眼睛和嘴巴的开闭程度，</li><li>最后根据PERCLOS算法求出单位时间内眼睛闭和状态所占的百分比，同时结合打哈欠的频率完成疲劳驾驶预警机制。</li></ul><h2 id="基于HOG的人脸检测"><a href="#基于HOG的人脸检测" class="headerlink" title="基于HOG的人脸检测"></a>基于HOG的人脸检测</h2><p>HOG特征具有较好的光学不变性与集合不变性，尤其适用于目标检测。主要步骤如下：<br>（1）、归一化<br>（2）、遍历图像，计算梯度值和梯度方向<br>（3）、得到梯度方向直方图<br>（4）、合并后得到特征向量并归一化<br>（5）、得到最终的HOG特征向量，描述整个图像。</p><p>本文选用的单元区域大小为8<em>8像素，单位块的大小为16像素，滑动步长L为8。输入图像大小为128</em>128时，则生成的HOG特征向量为8100维。最后通过提取大量的已标定人脸样本的HOG特征，并使用SVM对其进行训练生成人来鸟检测器。具体训练算法如表 算法一 所示。&lt;&gt;</p><h2 id="人脸特征点定位"><a href="#人脸特征点定位" class="headerlink" title="人脸特征点定位"></a>人脸特征点定位</h2><p>本文使用2014年Kazemi和Sullivan提出的面部标志估算算法检测人脸特征点并对齐人脸。<br>首先选取人脸的68个特殊标志点模型，从眉毛外沿至下颌底部，包括眼睛轮廓和嘴部轮廓等。利用该算法提出的基于梯度增强的框架，通过优化损失函数和误差的总和来学习回归树集合（Ensemble of Regression Trees，ERT），检测出脸部图像中的68个关键点，最后对齐人脸，并根据关键点序号定位出所需要的眼部、嘴部图像。</p><h2 id="卷积神经网络识别眼部状态"><a href="#卷积神经网络识别眼部状态" class="headerlink" title="卷积神经网络识别眼部状态"></a>卷积神经网络识别眼部状态</h2><p>在定位眼睛和嘴部区域后，分割上述局部区域，然后建立眼睛的诗句特征模型。<br>传统的基于深度学习的目标识别方法，主要针对单张的静态图片，使用CNN网络提取特征，将某一中间层作为特征描述然后利用softmax等分类器对其分类，中间层的特征描述通常位数较高。<br>而在疲劳驾驶检测过程中需要对视频监控的连续多幅图像进行处理，包含了更多的光照、遮挡等条件变化信息。本文没有采用传统的损失函数而是采用基于三元组损失函数的深度卷积神经网络学习眼睛特征。传统的损失函数，主要是计算最小化预测标记与真实标记之间的误差，它虽然可以保障类间分离，但不能实现类内聚集。<br>三元组损失函数，计算最大化不同类对象之间的欧式距离与同类对象之间的欧式距离的差值，这可以保障类间距离最大化，类内距离最小化，实现深度学习网络类内聚集、类间原理，提高了深度网络的分类能力。区分睁眼和闭眼两个状态集合，将独立的样本分类任务转换为样本间的距离度量学习任务，保留了更多的数据内部的关联性信息，直接通过两幅图像特征的欧式距离来判断两幅图像世博来同一类别，去除使用中间层作为特征描述的间接性实现端到端的学习，啊降低计算量，提高系统的实时性，网络结构如图5所示。<br><img src="http://ww1.sinaimg.cn/large/de1830begy1fw82kquk7tj20k8059dg5.jpg" alt=""></p><p>如图，CNN结构的输入尺寸大小为48<em>48，输出层为2维向量，表示2个类别（眼睛闭合和眼睛睁开），中间包含四个阶段的卷积层、归一化层、池化层的操作。第一阶段的卷积核大小分别为3</em>3和1<em>1，池化层以3</em>3的大小平均池化对比归一化的特征图，后续阶段的相应操作与第一阶段类似。</p><p>而一个三元组，包含3个样本：一个随机选择的眼睛样本Anchor,一个与随机样本相似的样本Positive，一个与随机样本不相似的样本Negative，核心思想为通过学习是的随机样本与相似样本间的距离相差最小，与不相似样本间的距离相差最大。也可以得到其损失函数。三元组分类损失对三个样本特征的梯度，可以得到。最后，我们使用随机梯度下降算法训练上面描述的基于三元组损失深度卷积神经网络模型，具体u想你连算法如下图。【伪代码】</p><p>利用深度卷积神经网络判别单帧图像的眼部开闭状态后，根据PRECCLOS定义计算单位时间内闭合状态所占时间的百分比。</p><h2 id="嘴部状态识别"><a href="#嘴部状态识别" class="headerlink" title="嘴部状态识别"></a>嘴部状态识别</h2><p>在驾驶过程中，驾驶员的嘴部通常由<strong>闭合、说话或唱歌、打哈欠</strong>三种状态，打哈欠的状态下，嘴部的张开程度将明显并持续大于前两种状态，因此在嘴部定位精确的情况下，可直接根据嘴部图像的宽高比判断嘴巴的行开程度，快速区分这三种状态，减少计算量。具体步骤如下：</p><ul><li>宽高比小于某一个阈值T时，可判断当前图像帧为打哈欠</li><li>当打哈欠的视频帧连续达到K帧时，记作打哈欠一次。</li><li>分别判断眼部和嘴部的疲劳状态后，融合眼睛的疲劳参数与嘴部的疲劳参数，分别赋予一定的权重，可以得到最终的疲劳值。</li></ul><h1 id="实验结果与分析"><a href="#实验结果与分析" class="headerlink" title="实验结果与分析"></a>实验结果与分析</h1><h2 id="数据集与网络训练"><a href="#数据集与网络训练" class="headerlink" title="数据集与网络训练"></a>数据集与网络训练</h2><p>本文采用了<strong>ZJU眨眼视频数据集和CEW眼睛数据集</strong>,ZJU包含20个人的80个avi剪辑视频，每个人包含四类片段：【正面视图未带眼睛、正面视图薄边框眼睛、正面视图黑框眼镜、向上视角未戴眼镜】在眨眼过程中，手动选择眼睛睁开、半开半闭、闭合的眼睛图像，并将左右眼分开存储，共产生7334幅图像（1574张闭眼样本和5770张睁眼样本）；CEW包含2423幅人脸图像，同样上述操作。</p><blockquote><p>将所有样本图像归一化为48*48，分别合并睁眼、闭眼样本集（不区分左右眼），然后分别从中划分20%的样本作为测试机，其余为训练集。使用随机选择策略在训练集中生成1000组三元组用于网络迭代训练，【本实验Ubuntu环境下使用touch框架实现】。</p></blockquote><h2 id="实验结果"><a href="#实验结果" class="headerlink" title="实验结果"></a>实验结果</h2><h3 id="眼睛状态识别测试"><a href="#眼睛状态识别测试" class="headerlink" title="眼睛状态识别测试"></a>眼睛状态识别测试</h3><ul><li>睁眼和闭眼的正确数目及识别准确率。</li><li>利用传统的CNN方法，在相同测试集上的测试结果</li><li>本文方法和CNN方法，眼睛状态识别的对比（测试项目如下：准确率，人脸检测时间，嘴部眼睛定位时间，眼部识别时间）</li></ul><h3 id="疲劳状态识别测试"><a href="#疲劳状态识别测试" class="headerlink" title="疲劳状态识别测试"></a>疲劳状态识别测试</h3><blockquote><p>训练集：采用的YawDD的数据集，包含了不同性别、种族、光照环境。<br>测试集：3个测试者（男性，女性，带眼镜男性）</p></blockquote><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>疲劳特征的选择是疲劳驾驶检测的关键, 本文提<br>出了一种基于深度学习的疲劳驾驶检测方法. 该方法<br>首先利用 HOG 特征检测视频中的人脸图像, 然后利用<br>特征点模型实现人脸器官的定位和分割, 接着使用深<br>度卷积神经网络学习眼睛区域的特征并实现眼睛闭合<br>状态的识别, 最后融合眼睛闭合状态与嘴部闭合状态<br>实现疲劳驾驶检测预警. 与其它的疲劳驾驶检测方法<br>相比, 该方法无需接触驾驶员, 能够自主提取更有判别<br>力的眼部特征, 并且具有良好的实时性, 特征的融合也<br>进一步提高了准确性. 在 ZJU、CEW 和 YawDD 数据<br>集上与 CNN 的视觉特征的检测方法的对比试验和分<br>析结果表明, 该方法具有更好的检测性能.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;关键词：HOG算子；特征点模型；深度学习；CNN；疲劳检测算法&lt;br&gt;Question：查看作者的相关思路；查看作者是否有相关的数据支撑&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;摘要&lt;/strong&gt;：针对现有疲劳驾驶
      
    
    </summary>
    
      <category term="-毕业论文" scheme="https://liwenxue.top/categories/%E6%AF%95%E4%B8%9A%E8%AE%BA%E6%96%87/"/>
    
    
      <category term="-毕业论文" scheme="https://liwenxue.top/tags/%E6%AF%95%E4%B8%9A%E8%AE%BA%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>我的新生活</title>
    <link href="https://liwenxue.top/%E6%AD%A3%E5%BC%8F%E5%BC%80%E5%A7%8B%E6%96%B0%E7%9A%84%E7%94%9F%E6%B4%BB/"/>
    <id>https://liwenxue.top/正式开始新的生活/</id>
    <published>2016-11-04T23:00:01.000Z</published>
    <updated>2018-10-13T12:08:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>categories: 生活<br>tags: [生活， 自己]</p><blockquote><p>这是前言</p></blockquote><ul><li>-<br>-</li></ul><h1 id="这个时候，就此开始吧。。"><a href="#这个时候，就此开始吧。。" class="headerlink" title="这个时候，就此开始吧。。"></a>这个时候，就此开始吧。。</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;categories: 生活&lt;br&gt;tags: [生活， 自己]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这是前言&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;-&lt;br&gt;-&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;这个时候，就此开始吧。。&quot;&gt;&lt;a href=&quot;#这个
      
    
    </summary>
    
      <category term="-生活" scheme="https://liwenxue.top/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="-生活 -自己" scheme="https://liwenxue.top/tags/%E7%94%9F%E6%B4%BB-%E8%87%AA%E5%B7%B1/"/>
    
  </entry>
  
  <entry>
    <title>梦</title>
    <link href="https://liwenxue.top/%E6%A2%A6/"/>
    <id>https://liwenxue.top/梦/</id>
    <published>2016-11-04T23:00:01.000Z</published>
    <updated>2018-10-13T12:25:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>categories: 生活<br>tags: [梦， 自己]</p><blockquote><p>这是前言</p></blockquote><h1 id="跑快点，不然没命了"><a href="#跑快点，不然没命了" class="headerlink" title="跑快点，不然没命了"></a>跑快点，不然没命了</h1><p>要泄洪。<br>我，姐，另一个身材不错的小姐姐，三个人在沟壑边上的小路上，往前面探视。</p><p>路上，半人多高青绿青绿的杂草，在肆意的摇摆，似乎毫不畏惧那汹涌不定的洪峰，仿佛淹没之后，迎接他们的仍是新生。</p><p>今天我要说的故事，其实很短，当一行三人走到石桥下沿 似乎再也不能沿着河道下行的时候，我们仨站住了，小心翼翼却又颇具胆量的往河道下眺望，<br>仿佛那湍急的水流、溅起来的浪花是我们小时候玩的极熟的玩伴似的————丝毫不会对你产生致命的威胁。</p><p>果然，水下浪花带来的水雾让人全身清爽，涛涛水声带来的震撼，十分立体！我们一边惊喜刺激，一边小心翼翼————我们知道，掉下去，九死一生都不为过。</p><p>可能自小机灵的我这时候受到了上天的感化，不小心往上游瞄了一眼！意外！！！几人高的巨浪奔涌而下，像一只巨龙，仿佛要吞噬这道上的一切，绝无商量的可能性！“往后退！！！快！”，我的一声惊吼，让她两懵了一下，所以我立刻拉着她两往后退！万幸，背后是一条刻进去的小道，让我们得以稍事休息，看不到那河道上方拐角的巨浪！！！</p><p>不知道为什么，鬼使神差的我探出小道往上游看，一看吓一跳！！似乎更大的洪峰就要到来，隐隐约约我感受到，应该是传说中泄洪般的巨浪就要来临了。。。。。我们，只有短短十秒左右时间逃离这里，这个可能埋没我们三个年轻生命的地方！</p><p>我去年马拉松，现在从这个小道， 跑到上游10米左右的小道，才有生还的可能（那个小道能够出去。。。的可能性比较大，因为暂时的这个小道，是死的，继续呆下去只会被水浪浸没并冲击而死）。。她两没练习过跑步，短跑冲刺才有戏，<br>她们能行吗！！？？？才10秒钟，快跑！！！于是，2秒钟说完立刻行动！！！死，似乎没那么可怕了，因为，它终将在8秒后来临，不死，才是奇迹。。。。</p><p>这时候的水浪，似乎还是那么的汹涌，可，还是那么美丽吗？</p><p>如果时间到没跑过去，只能双手抓住杂草，等待10秒后下一个洪峰到来前，继续奔跑！我能撑过这一个洪峰吗，，，，心里没底（即使我健身房锻炼了半年，近期我在锻炼肩部和肱三头肌。。。。）</p><p>啊，我的双臂能承受住吗！！两个妹子我已经管不了了！！！我的手啊！！疼！</p><p>啊，醒了。。。。原来双手受冻，冷醒了。。。心，扑通扑通，，活着真好。。呵</p><blockquote><p> 参考链接：</p></blockquote><ol><li>《平凡的世界》里，村里要炸山，却突然跑进爆炸区一个愣子， 最后似乎被炸死了</li><li>8月底去了宜昌三峡，气势磅礴，于是联想到当初修建时可能出现的场景————奔流大浪！</li><li>几年前去松滋水电站，看到的泄洪画面。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;categories: 生活&lt;br&gt;tags: [梦， 自己]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这是前言&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;跑快点，不然没命了&quot;&gt;&lt;a href=&quot;#跑快点，不然没命了&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
      <category term="-生活" scheme="https://liwenxue.top/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="-生活 -梦" scheme="https://liwenxue.top/tags/%E7%94%9F%E6%B4%BB-%E6%A2%A6/"/>
    
  </entry>
  
</feed>
