<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>【Bruce&#39;s Blog】| 备战马拉松</title>
  
  <subtitle>厚德载物</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://liwenxue.top/"/>
  <updated>2018-10-12T08:05:43.351Z</updated>
  <id>https://liwenxue.top/</id>
  
  <author>
    <name>Bruce Lee</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>face2ai社区成立啦！</title>
    <link href="https://liwenxue.top/face2%E7%A4%BE%E5%8C%BA%E6%88%90%E7%AB%8B%E5%95%A6/"/>
    <id>https://liwenxue.top/face2社区成立啦/</id>
    <published>2018-08-31T16:00:01.000Z</published>
    <updated>2018-10-12T08:05:43.351Z</updated>
    
    <content type="html"><![CDATA[<h1 id="图像处理方向，潜心研究吧！"><a href="#图像处理方向，潜心研究吧！" class="headerlink" title="图像处理方向，潜心研究吧！"></a>图像处理方向，潜心研究吧！</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;图像处理方向，潜心研究吧！&quot;&gt;&lt;a href=&quot;#图像处理方向，潜心研究吧！&quot; class=&quot;headerlink&quot; title=&quot;图像处理方向，潜心研究吧！&quot;&gt;&lt;/a&gt;图像处理方向，潜心研究吧！&lt;/h1&gt;
      
    
    </summary>
    
      <category term="人工智能" scheme="https://liwenxue.top/categories/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    
      <category term="face2ai" scheme="https://liwenxue.top/tags/face2ai/"/>
    
      <category term="人工智能" scheme="https://liwenxue.top/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>Git 和 GitHub 的使用方法汇总</title>
    <link href="https://liwenxue.top/Git%E5%92%8CGitHub%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%E6%B1%87%E6%80%BB/"/>
    <id>https://liwenxue.top/Git和GitHub的使用方法汇总/</id>
    <published>2018-06-06T16:38:36.000Z</published>
    <updated>2018-10-12T08:27:20.508Z</updated>
    
    <content type="html"><![CDATA[<p>#源文件：三、Linux相关-&gt; Git 和 GitHub 的使用方法汇总</p><p><a href="https://www.cnblogs.com/fnng/archive/2011/08/25/2153807.html" target="_blank" rel="noopener">参考链接如下</a></p><h2 id="1-我们需要使用git在本地创建一个相同的项目。"><a href="#1-我们需要使用git在本地创建一个相同的项目。" class="headerlink" title="1. 我们需要使用git在本地创建一个相同的项目。"></a>1. 我们需要使用git在本地创建一个相同的项目。</h2><pre><code>&lt;pre&gt;$ makdir ~/hello-world    //创建一个项目hello-world$ cd ~/hello-world    //打开这个项目$ git init    //初始化 $ touch README$ git add README   //更新README文件$ git commit -m &apos;first commit&apos;//提交更新，并注释信息“first commit” $ git remote add origin git@github.com:defnngj/hello-world.git   //连接远程github项目  $ git push -u origin master   //将本地项目更新到github项目上去&lt;/pre&gt;源文档 &lt;https://www.cnblogs.com/fnng/archive/2011/08/25/2153807.html&gt; </code></pre><h2 id="2-Git的诞生"><a href="#2-Git的诞生" class="headerlink" title="2. Git的诞生"></a>2. Git的诞生</h2><pre><code>Linus Torvalds在1991年创建了开源系统Linux，在2002年以前，世界各地的志愿者把源代码文件通过diff的方式发给Linus，然后由Linus本人通过手工方式合并代码！然后，Linux系统已经发展了十年了，代码库之大让Linus很难继续通过手工方式管理了。源文档 &lt;http://www.testclass.net/git/git-github-start/&gt; </code></pre><h2 id="3-更改readme文件！！！"><a href="#3-更改readme文件！！！" class="headerlink" title="3. 更改readme文件！！！"></a>3. 更改readme文件！！！</h2><pre><code>第一步尝试失败：  &lt;pre&gt;Bruce Lee@Bruce MINGW64 ~/bruce_demo_pack (master)$ vim READMEBruce  Lee@Bruce MINGW64 ~/bruce_demo_pack (master)$ git push -u origin masterEverything up-to-dateBranch &apos;master&apos; set up to track remote branch &apos;master&apos; from &apos;origin&apos;.&lt;/pre&gt;单独更改了其中的README文件后，直接执行“git push -u origin master”语句，其并不能同步到GitHub网站上去。</code></pre><blockquote><p>Note:   在第一次远程链接某项目时，这一句，必不可少！<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add origin git@github.com:guanzizai1006/bruce_demo_pack.git</span><br></pre></td></tr></table></figure></p></blockquote><p>  第二次尝试成功：<br>        <pre><br>        Bruce  Lee@Bruce MINGW64 ~/bruce_demo_pack (master)<br>        $ git commit -m “用git commit -m 提交更新”<br>        [master bffe44a] “用git commit -m 提交更新<br>         1 file changed, 11 insertions(+)<br>        </pre></p><p>  使用此命令，  </p><pre><code>&lt;pre&gt;$ git commit -m &quot;用git commit -m 提交更新&quot;  //双引号内是添加的评论内容,成功提交更新，下一步是要push上去！$ git push -u origin master Bruce  Lee@Bruce MINGW64 ~/bruce_demo_pack (master)$ git push -u origin masterCounting objects: 3, done.Delta compression using up to 4 threads.Compressing objects: 100% (2/2), done.Writing objects: 100% (3/3), 660 bytes | 660.00 KiB/s, done.Total 3 (delta 0), reused 0 (delta 0)To github.com:guanzizai1006/bruce_demo_pack.git   13cf1ed..bffe44a  master -&gt; masterBranch &apos;master&apos; set up to track remote branch &apos;master&apos; from &apos;origin&apos;.&lt;/pre&gt;</code></pre><h2 id="4-当本地项目中，新添加了一个-py-文件后，要上传到云端。"><a href="#4-当本地项目中，新添加了一个-py-文件后，要上传到云端。" class="headerlink" title="4. 当本地项目中，新添加了一个 py 文件后，要上传到云端。"></a>4. 当本地项目中，新添加了一个 py 文件后，要上传到云端。</h2><pre>$ git add one.py     //更新README文件$ git commit -m 'add the file named one.py'   //提交更新，并注释信息“first commit，用以说明本次更新的是啥” 源文档 <https: 25="" 2011="" www.cnblogs.com="" fnng="" archive="" 08="" 2153807.html=""> 【当然，这时候可以考虑，要不要远程连接github项目。 $ git remote add origin git@github.com:guanzizai1006/bruce_demo_pack.git】$ git push -u origin master//将本地项目更新到github项目上去</https:></pre><h2 id="5-克隆到本地。"><a href="#5-克隆到本地。" class="headerlink" title="5. 克隆到本地。"></a>5. 克隆到本地。</h2><p>（前期准备阶段）<br>首先，下载安装Git。</p><p>其次，通过Git生成本地公钥，并且将公钥添加到GitHub中。</p><p>最后，设置仓库人员的用户名和邮箱地址。</p><p>用  git clone   命令，克隆到目标路径。<br>（ssh 方式）</p><p><img src="http://pf6sbcbe5.bkt.clouddn.com/1.png" alt="克隆到本地"></p><p>或者  （http 方式）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  git clone https://github.com/defnngj/project-name</span><br></pre></td></tr></table></figure><blockquote><p>“git add” 命令对当前目录下的文件添加跟踪。这个命令后面 加一个 点 . 则意味着路径下的所有文件<br>“git commit” 命令将添加文件提交到本地仓库。<br>“git push” 将本地项目提交到远程仓库GitHub。<br>除第一次下载项目需要通过 “git clone” 将项目克隆到本地外,后续再使用 “git pull” 命令时会直接将更新拉取到本地</p></blockquote><pre>$ git pull origin master</pre>源文档 <http: www.testclass.net="" git="" git-github-used=""> ## 6.命令行，windows进入别的盘符<pre>Bruce  Lee@Bruce MINGW64 ~$ cd /d</pre>Git的入门学习和使用。<https: 51694888="" blog.csdn.net="" tonyshengtan="" article="" details="">————————Linux下安装git 并下载码云仓库——————————————<pre>bruce@bruce-virtual-machine:~$ sudo apt-get install git[sudo] bruce 的密码： 正在读取软件包列表... 完成正在分析软件包的依赖关系树       正在读取状态信息... 完成       git 已经是最新版 (1:2.7.4-0ubuntu1.4)。升级了 0 个软件包，新安装了 0 个软件包，要卸载 0 个软件包，有 83 个软件包未被升级。</pre><ul><li><p>新建本地文件夹</p><pre>bruce@bruce-virtual-machine:~/桌面$ mkdir face_fatigue_detection</pre></li><li><p>克隆到本地</p><pre>bruce@bruce-virtual-machine:~/桌面/face_fatigue_detection$ git clone https://gitee.com/thc1234/face_fatigue_detection.git正克隆到 'face_fatigue_detection'...Username for 'https://gitee.com': guanzizai1006Password for 'https://Bruce@gitee.com': </pre></li><li><p>克隆完成啦</p><pre>bruce@bruce-virtual-machine:~/桌面/face_fatigue_detection$ git clone https://gitee.com/thc1234/face_fatigue_detection.git正克隆到 'face_fatigue_detection'...Username for 'https://gitee.com': guanzizai1006Password for 'https://guanzizai1006@gitee.com': remote: Enumerating objects: 405, done.remote: Counting objects: 100% (405/405), done.remote: Compressing objects: 100% (398/398), done.remote: Total 405 (delta 196), reused 0 (delta 0)接收对象中: 100% (405/405), 113.33 MiB | 1.23 MiB/s, 完成.处理 delta 中: 100% (196/196), 完成.</pre></li></ul><p>———————— Git配置 gitee码云————————————————————</p><p>由本地文件夹更新到云端的话，则只要命令行 ./push.sh 则可以完成了。</p><p>由云端更新到本地，只需要在本地目录下，执行  git pull 就OK了。</p><p>————————————————————————————————————</p><h2 id="7-查看当前路径的“完整路径”"><a href="#7-查看当前路径的“完整路径”" class="headerlink" title="7. 查看当前路径的“完整路径”"></a>7. 查看当前路径的“完整路径”</h2><p><img src="http://pf6sbcbe5.bkt.clouddn.com/2.png" alt="查看当前路径"></p><h2 id="8-新建本地文件夹后，克隆云端内容到本地目录"><a href="#8-新建本地文件夹后，克隆云端内容到本地目录" class="headerlink" title="8. 新建本地文件夹后，克隆云端内容到本地目录"></a>8. 新建本地文件夹后，克隆云端内容到本地目录</h2><p><img src="http://pf6sbcbe5.bkt.clouddn.com/3.png" alt="查看当前路径"></p><h2 id="9-运行sh文件，"><a href="#9-运行sh文件，" class="headerlink" title="9. 运行sh文件，"></a>9. 运行sh文件，</h2><p><img src="http://pf6sbcbe5.bkt.clouddn.com/4.png" alt="查看当前路径"></p><h2 id="10-sh-文件内容如下："><a href="#10-sh-文件内容如下：" class="headerlink" title="10.  sh 文件内容如下："></a>10.  sh 文件内容如下：</h2><pre>#!/bin/bashgit add ./*git commit -m "shell"git push</pre><p>截图如下<br><img src="http://pf6sbcbe5.bkt.clouddn.com/5.png" alt="查看当前路径"></p></https:></http:>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#源文件：三、Linux相关-&amp;gt; Git 和 GitHub 的使用方法汇总&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/fnng/archive/2011/08/25/2153807.html&quot; target=&quot;_blank&quot; re
      
    
    </summary>
    
      <category term="Git" scheme="https://liwenxue.top/categories/Git/"/>
    
    
      <category term="Git" scheme="https://liwenxue.top/tags/Git/"/>
    
      <category term="Github" scheme="https://liwenxue.top/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>写给小白的express学习笔记</title>
    <link href="https://liwenxue.top/%E6%B5%8B%E8%AF%95/"/>
    <id>https://liwenxue.top/测试/</id>
    <published>2018-06-06T16:38:36.000Z</published>
    <updated>2018-10-12T08:27:33.635Z</updated>
    
    <content type="html"><![CDATA[<ul><li>hhh</li><li>yonglaiceshide ,,buguanwo xiede shishenm </li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;hhh&lt;/li&gt;
&lt;li&gt;yonglaiceshide ,,buguanwo xiede shishenm &lt;/li&gt;
&lt;/ul&gt;

      
    
    </summary>
    
      <category term="学习笔记" scheme="https://liwenxue.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="node.js" scheme="https://liwenxue.top/tags/node-js/"/>
    
      <category term="express" scheme="https://liwenxue.top/tags/express/"/>
    
  </entry>
  
</feed>
